# Set root logger level to WARN, and send its output to ROOTLOG
log4j.rootLogger=WARN, ROOTLOG

# Configure the ROOTLOG appender
log4j.appender.ROOTLOG=org.apache.log4j.RollingFileAppender
# Note: Use FORWARD SLASHES for directory separators, even on Microsoft Windows.
log4j.appender.ROOTLOG.File=${apollo.log.dir}/@WAR_NAME@/IBM_i2_General.log
log4j.appender.ROOTLOG.layout=org.apache.log4j.PatternLayout
log4j.appender.ROOTLOG.layout.ConversionPattern=%d %-4r [%t] %-5p %c - %x - %m%n
log4j.appender.ROOTLOG.MaxFileSize=1MB
log4j.appender.ROOTLOG.MaxBackupIndex=9
log4j.appender.ROOTLOG.encoding=UTF-8

# Uncomment one of the following four lines to set up a logger for Apollo logging
log4j.logger.com.i2group=WARN, APOLLOLOG
#log4j.logger.com.i2group=DEBUG, CONSOLE, APOLLOLOG
#log4j.logger.com.i2group=ERROR, APOLLOLOG
#log4j.logger.com.i2group=ERROR, CONSOLE, APOLLOLOG
log4j.additivity.com.i2group=false
# Send event replay and index recovery logs to info as it's important (but hopefully short-lived)
log4j.logger.com.i2group.apollo.commandservice.eventreplay=INFO
log4j.logger.com.i2group.apollo.searchservice.index.crashrecovery.internal.SetMembershipCrashRecoveryCacheDAO=INFO
log4j.logger.com.i2group.apollo.searchservice.index.crashrecovery.internal.TextIndexCrashRecovery=INFO

# Opal DAOD
log4j.logger.com.i2group.opal.daod.connectors.controller.internal.I2ConnectSynchronizer=INFO
log4j.logger.com.i2group.opal.daod.connectors.model.internal.ConnectorModelFactory=INFO

# Separate log entries for DAOD - if set to DEBUG will record the duration of operations in the external system and IAP
# log4j.logger.com.i2group.apollo.externaldata.internal.ExternalDataLogger=DEBUG

# The ConsoleLogger must be set to INFO, CONSOLE
# otherwise the startup log checker will not work.
log4j.logger.com.i2group.apollo.common.toolkit.internal.ConsoleLogger=INFO, CONSOLE
log4j.additivity.com.i2group.apollo.common.toolkit.internal.ConsoleLogger=false

# Separate log file for retry
log4j.logger.com.i2group.apollo.common.orm.internal.RobustDatabaseTaskExecutor=WARN, APOLLOLOGRETRY
log4j.additivity.com.i2group.apollo.common.orm.internal.RobustDatabaseTaskExecutor=false
log4j.logger.com.i2group.apollo.service.ServiceRetryMethodExecutor=WARN, APOLLOLOGRETRY
log4j.additivity.com.i2group.apollo.service.ServiceRetryMethodExecutor=false
log4j.logger.com.i2group.disco.search.internal.RobustExecutor=WARN, APOLLOLOGRETRY
log4j.additivity.com.i2group.disco.search.internal.RobustExecutor=false
log4j.logger.com.i2group.opal.daod.resultsets.background.internal.ResultSetCleaner=WARN, APOLLOLOGRETRY
log4j.additivity.com.i2group.opal.daod.resultsets.background.internal.ResultSetCleaner=false

# Configure the APOLLOLOGRETRY appender
log4j.appender.APOLLOLOGRETRY=org.apache.log4j.RollingFileAppender
# Note: Use FORWARD SLASHES for directory separators, even on Microsoft Windows.
log4j.appender.APOLLOLOGRETRY.File=${apollo.log.dir}/@WAR_NAME@/IBM_i2_Analysis_Repository_Retry.log
log4j.appender.APOLLOLOGRETRY.layout=org.apache.log4j.PatternLayout
log4j.appender.APOLLOLOGRETRY.layout.ConversionPattern=%d %-4r [%t] %-5p %c - %x - %m%n
log4j.appender.APOLLOLOGRETRY.MaxFileSize=1MB
log4j.appender.APOLLOLOGRETRY.MaxBackupIndex=9
log4j.appender.APOLLOLOGRETRY.Append=true
log4j.appender.APOLLOLOGRETRY.encoding=UTF-8

# Separate log file for reload
log4j.logger.com.i2group.disco.reload.guice.internal.ConfigurationStartupHandler=ERROR, RELOAD
log4j.additivity.com.i2group.disco.reload.guice.internal.ConfigurationStartupHandler=false
log4j.logger.com.i2group.disco.reload.guice.internal.LiveConfigurationReloader=WARN, RELOAD
log4j.additivity.com.i2group.disco.reload.guice.internal.LiveConfigurationReloader=false

# Configure the RELOAD appender
log4j.appender.RELOAD=org.apache.log4j.RollingFileAppender
# Note: Use FORWARD SLASHES for directory separators, even on Microsoft Windows.
log4j.appender.RELOAD.File=${apollo.log.dir}/@WAR_NAME@/IBM_i2_Update_Live_Configuration.log
log4j.appender.RELOAD.layout=org.apache.log4j.PatternLayout
log4j.appender.RELOAD.layout.ConversionPattern=%d %-5p %c - %m%n
log4j.appender.RELOAD.MaxFileSize=1MB
log4j.appender.RELOAD.MaxBackupIndex=9
log4j.appender.RELOAD.Append=true
log4j.appender.RELOAD.encoding=UTF-8

# Separate log file for the alert scheduler
log4j.logger.com.i2group.disco.infostore.alert.schedule.internal.AlertSchedulerLog=INFO, ALERTSCHEDULERLOG
log4j.additivity.com.i2group.disco.infostore.alert.schedule.internal.AlertSchedulerLog=false

# Configure the ALERTSCHEDULERLOG appender
log4j.appender.ALERTSCHEDULERLOG=org.apache.log4j.RollingFileAppender
# Note: Use FORWARD SLASHES for directory separators, even on Microsoft Windows.
log4j.appender.ALERTSCHEDULERLOG.File=${apollo.log.dir}/@WAR_NAME@/IBM_i2_Alert_Scheduler.log
log4j.appender.ALERTSCHEDULERLOG.layout=org.apache.log4j.PatternLayout
log4j.appender.ALERTSCHEDULERLOG.layout.ConversionPattern=%d [%t] %-5p - %x %m%n
log4j.appender.ALERTSCHEDULERLOG.MaxFileSize=1MB
log4j.appender.ALERTSCHEDULERLOG.MaxBackupIndex=9
log4j.appender.ALERTSCHEDULERLOG.Append=true
log4j.appender.ALERTSCHEDULERLOG.encoding=UTF-8

# Separate log entries for the security package - if set to ALL they will log excessively and
# this will rapidly fill the logs.
# This should only be set to 'ALL' if you need to debug security issues, but if you need to know
# what is going on, you can (temporarily) uncomment the following line:
# log4j.logger.com.i2group.apollo.security=ALL

# Configure the CONSOLE appender
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
# The console log pattern must be in the correct format or the log scanner won't look at the message.
log4j.appender.CONSOLE.layout.ConversionPattern=%d - [%c] - %m%n

# Configure the APOLLOLOG appender
log4j.appender.APOLLOLOG=org.apache.log4j.RollingFileAppender
# Note: Use FORWARD SLASHES for directory separators, even on Microsoft Windows.
log4j.appender.APOLLOLOG.File=${apollo.log.dir}/@WAR_NAME@/IBM_i2_Analysis_Repository.log
log4j.appender.APOLLOLOG.layout=org.apache.log4j.PatternLayout
log4j.appender.APOLLOLOG.layout.ConversionPattern=%d %-4r [%t] %-5p %c - %X{requestSessionId} %X{requestUniqueId} %x - %m%n
log4j.appender.APOLLOLOG.MaxFileSize=1MB
log4j.appender.APOLLOLOG.MaxBackupIndex=9
log4j.appender.APOLLOLOG.Append=true
log4j.appender.APOLLOLOG.encoding=UTF-8

# This Appender will write a file for each publisher/subscriber (context), log events for that
# context are directed to that file.
# @context@ is replaced in the File property with the context.
log4j.appender.PUBSUBLOG=com.i2group.disco.util.logging.internal.TemplateRollingFileAppender
# Note: Use FORWARD SLASHES for directory separators, even on Microsoft Windows.
log4j.appender.PUBSUBLOG.File=${apollo.log.dir}/@WAR_NAME@/@context@/IBM_i2_Indexer.log
log4j.appender.PUBSUBLOG.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.PUBSUBLOG.layout.ConversionPattern=%d %-4r [%t] %-5p %c{-2} %m%n
log4j.appender.PUBSUBLOG.MaxFileSize=1MB
log4j.appender.PUBSUBLOG.MaxBackupIndex=9
log4j.appender.PUBSUBLOG.Append=true
log4j.appender.PUBSUBLOG.encoding=UTF-8

# The template.PUBLSUBLOG is used to provide a default log level and additivity to all classes
# logging within a given context.
log4j.logger.template.PUBSUBLOG=INFO, PUBSUBLOG
log4j.additivity.template.PUBSUBLOG=false
# Individual classes may be specified to alter the log level and additivity for that class.
# log4j.logger.com.i2group.disco.search.solr.internal.SolrClientHelper=DEBUG, PUBSUBLOG
# log4j.additivity.com.i2group.disco.search.solr.internal.SolrClientHelper=false

log4j.logger.com.i2group.disco.zookeeper.internal.ZkGlobalCommandExecutor=INFO

# This Appender will write a file for the solr cluster status
log4j.appender.SOLRSTATUSLOG=org.apache.log4j.RollingFileAppender
# Note: Use FORWARD SLASHES for directory separators, even on Microsoft Windows.
log4j.appender.SOLRSTATUSLOG.File=${apollo.log.dir}/@WAR_NAME@/IBM_i2_Solr_Cluster_Status.log
log4j.appender.SOLRSTATUSLOG.layout=org.apache.log4j.PatternLayout
log4j.appender.SOLRSTATUSLOG.layout.ConversionPattern=%d{yyyy-MM-dd'T'HH:mm:ss},%m%n
log4j.appender.SOLRSTATUSLOG.MaxFileSize=1MB
log4j.appender.SOLRSTATUSLOG.MaxBackupIndex=9
log4j.appender.SOLRSTATUSLOG.Append=true
log4j.appender.SOLRSTATUSLOG.encoding=UTF-8

log4j.logger.com.i2group.disco.search.indexing.internal.SolrHealthStatusLogger=INFO, SOLRSTATUSLOG
log4j.additivity.com.i2group.disco.search.indexing.internal.SolrHealthStatusLogger=false

# This Appender will write a file for ingestion status logging, log events for that
# context are directed to that file.
# @context@ is replaced in the File property with the context.
log4j.appender.STATUSLOG=com.i2group.disco.util.logging.internal.TemplateRollingFileAppender
# Note: Use FORWARD SLASHES for directory separators, even on Microsoft Windows.
log4j.appender.STATUSLOG.File=${apollo.log.dir}/@WAR_NAME@/@context@/IBM_i2_Indexing_Progress.csv
log4j.appender.STATUSLOG.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.STATUSLOG.layout.ConversionPattern=%d{yyyy-MM-dd'T'HH:mm:ss},%m%n
log4j.appender.STATUSLOG.MaxFileSize=1MB
log4j.appender.STATUSLOG.MaxBackupIndex=9
log4j.appender.STATUSLOG.Append=true
log4j.appender.STATUSLOG.encoding=UTF-8

# The template.STATUSLOG is used to provide a default log level and additivity to all classes
# logging within a given context.
log4j.logger.template.STATUSLOG=INFO, STATUSLOG
log4j.additivity.template.STATUSLOG=false

# Configure logging for the ApplicationLifecycleManager
log4j.logger.com.i2group.disco.servlet.ApplicationLifecycleManager=INFO

# To log information about how Visual Query is configured, uncomment the
# following lines.
# Configure the VQLOG appender
#log4j.appender.VQLOG=org.apache.log4j.RollingFileAppender
# Note: Use FORWARD SLASHES for directory separators, even on Microsoft Windows.
#log4j.appender.VQLOG.File=${apollo.log.dir}/@WAR_NAME@/IBM_i2_vq_config.log
#log4j.logger.com.i2group.disco.visualqueryservice.configuration.internal.VisualQueryConfigurationValidator=DEBUG, VQLOG, CONSOLE
#log4j.additivity.com.i2group.disco.visualqueryservice.configuration.internal.VisualQueryConfigurationValidator=false
#log4j.appender.VQLOG.layout=org.apache.log4j.PatternLayout
#log4j.appender.VQLOG.Append=false
#log4j.appender.VQLOG.encoding=UTF-8

# If you're using the example TracerUserActivityLogger to log user activity
# then you'll also need to configure the USERACTIVITYLOG appender by uncommenting:
#log4j.logger.com.i2group.apollo.example.useractivitylogger.TracerUserActivityLogger=INFO, USERACTIVITYLOG
#log4j.additivity.com.i2group.apollo.example.useractivitylogger.TracerUserActivityLogger=false
#log4j.appender.USERACTIVITYLOG=org.apache.log4j.RollingFileAppender
# Note: Use FORWARD SLASHES for directory separators, even on Microsoft Windows.
#log4j.appender.USERACTIVITYLOG.File=${apollo.log.dir}/@WAR_NAME@/IBM_i2_useractivity.log
#log4j.appender.USERACTIVITYLOG.layout=org.apache.log4j.PatternLayout
#log4j.appender.USERACTIVITYLOG.layout.ConversionPattern=%d %-4r [%t] %-5p %c - %x - %m%n
#log4j.appender.USERACTIVITYLOG.MaxFileSize=1MB
#log4j.appender.USERACTIVITYLOG.MaxBackupIndex=9
#log4j.appender.USERACTIVITYLOG.Append=false
#log4j.appender.USERACTIVITYLOG.encoding=UTF-8

# If you want to control logging from a specific class, use something like this:
# log4j.category.com.i2group.apollo.commandservice.internal.CommandRouter=DEBUG, APOLLOLOG

