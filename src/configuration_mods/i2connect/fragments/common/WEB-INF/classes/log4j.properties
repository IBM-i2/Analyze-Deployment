# Apollo_Configuration/Logging/log4j.properties.deployment

# Set root logger level to WARN, and send its output to ROOTLOG
log4j.rootLogger=WARN, ROOTLOG

# Configure the ROOTLOG appender
log4j.appender.ROOTLOG=org.apache.log4j.RollingFileAppender
# Note: Use FORWARD SLASHES for directory separators, even on Microsoft Windows.
log4j.appender.ROOTLOG.File=${apollo.log.dir}/@WAR_NAME@/IBM_i2_General.log
log4j.appender.ROOTLOG.layout=org.apache.log4j.PatternLayout
log4j.appender.ROOTLOG.layout.ConversionPattern=%d %-4r [%t] %-5p %c %x - %m%n
log4j.appender.ROOTLOG.MaxFileSize=1MB
log4j.appender.ROOTLOG.MaxBackupIndex=9

# Uncomment one of the following four lines to set up a logger for Apollo logging
log4j.logger.com.i2group=WARN, APOLLOLOG
#log4j.logger.com.i2group=DEBUG, CONSOLE, APOLLOLOG
#log4j.logger.com.i2group=ERROR, APOLLOLOG
#log4j.logger.com.i2group=ERROR, CONSOLE, APOLLOLOG
log4j.additivity.com.i2group=false
# Send event replay and index recovery logs to info as it's important (but hopefully short-lived)
log4j.logger.com.i2group.apollo.commandservice.eventreplay=INFO
log4j.logger.com.i2group.apollo.searchservice.index.crashrecovery.internal.SetMembershipCrashRecoveryCacheDAO=INFO
log4j.logger.com.i2group.apollo.searchservice.index.crashrecovery.internal.TextIndexCrashRecovery=INFO

# Separate log entries for DAOD - if set to DEBUG will record the duration of operations in the external system and IAP
# log4j.logger.com.i2group.apollo.externaldata.internal.ExternalDataLogger=DEBUG

# The ConsoleLogger must be set to INFO, CONSOLE
# otherwise the startup log checker will not work.
log4j.logger.com.i2group.apollo.common.toolkit.internal.ConsoleLogger=INFO, CONSOLE
log4j.additivity.com.i2group.apollo.common.toolkit.internal.ConsoleLogger=false

# Separate log file for retry
log4j.logger.com.i2group.apollo.common.orm.internal.RobustDatabaseTaskExecutor=WARN, APOLLOLOGRETRY
log4j.additivity.com.i2group.apollo.common.orm.internal.RobustDatabaseTaskExecutor=false
log4j.logger.com.i2group.apollo.service.ServiceRetryMethodExecutor=WARN, APOLLOLOGRETRY
log4j.additivity.com.i2group.apollo.service.ServiceRetryMethodExecutor=false
log4j.logger.com.i2group.disco.search.internal.RobustSolrExecutor=WARN, APOLLOLOGRETRY
log4j.additivity.com.i2group.disco.search.internal.RobustSolrExecutor=false


# Configure the APOLLOLOGRETRY appender
log4j.appender.APOLLOLOGRETRY=org.apache.log4j.RollingFileAppender
# Note: Use FORWARD SLASHES for directory separators, even on Microsoft Windows.
log4j.appender.APOLLOLOGRETRY.File=${apollo.log.dir}/@WAR_NAME@/IBM_i2_Analysis_Repository_Retry.log
log4j.appender.APOLLOLOGRETRY.layout=org.apache.log4j.PatternLayout
log4j.appender.APOLLOLOGRETRY.layout.ConversionPattern=%d %-4r [%t] %-5p %c %x - %m%n
log4j.appender.APOLLOLOGRETRY.MaxFileSize=1MB
log4j.appender.APOLLOLOGRETRY.MaxBackupIndex=9
log4j.appender.APOLLOLOGRETRY.Append=true

# Separate log entries for the security package - if set to ALL they will log excessively and
# this will rapidly fill the logs.
# This should only be set to 'ALL' if you need to debug security issues, but if you need to know
# what is going on, you can (temporarily) uncomment the following line:
# log4j.logger.com.i2group.apollo.security=ALL

# Configure the CONSOLE appender
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
# The console log pattern must be in the correct format or the log scanner won't look at the message.
log4j.appender.CONSOLE.layout.ConversionPattern=%d - [%c] - %m%n

# Configure the APOLLOLOG appender
log4j.appender.APOLLOLOG=org.apache.log4j.RollingFileAppender
# Note: Use FORWARD SLASHES for directory separators, even on Microsoft Windows.
log4j.appender.APOLLOLOG.File=${apollo.log.dir}/@WAR_NAME@/IBM_i2_Analysis_Repository.log
log4j.appender.APOLLOLOG.layout=org.apache.log4j.PatternLayout
log4j.appender.APOLLOLOG.layout.ConversionPattern=%d %-4r [%t] %-5p %c %x - %m%n
log4j.appender.APOLLOLOG.MaxFileSize=1MB
log4j.appender.APOLLOLOG.MaxBackupIndex=9
log4j.appender.APOLLOLOG.Append=true

# To log information about how Visual Query is configured, uncomment the
# following lines.
# Configure the VQLOG appender
#log4j.appender.VQLOG=org.apache.log4j.RollingFileAppender
# Note: Use FORWARD SLASHES for directory separators, even on Microsoft Windows.
#log4j.appender.VQLOG.File=${apollo.log.dir}/@WAR_NAME@/IBM_i2_vq_config.log
#log4j.logger.com.i2group.disco.visualqueryservice.configuration.internal.VisualQueryConfigurationValidator=DEBUG, VQLOG, CONSOLE
#log4j.additivity.com.i2group.disco.visualqueryservice.configuration.internal.VisualQueryConfigurationValidator=false
#log4j.appender.VQLOG.layout=org.apache.log4j.PatternLayout
#log4j.appender.VQLOG.Append=false

# If you're using the example TracerUserActivityLogger to log user activity
# then you'll also need to configure the USERACTIVITYLOG appender by uncommenting:
#log4j.logger.com.i2group.apollo.example.useractivitylogger.TracerUserActivityLogger=INFO, USERACTIVITYLOG
#log4j.additivity.com.i2group.apollo.example.useractivitylogger.TracerUserActivityLogger=false
#log4j.appender.USERACTIVITYLOG=org.apache.log4j.RollingFileAppender
# Note: Use FORWARD SLASHES for directory separators, even on Microsoft Windows.
#log4j.appender.USERACTIVITYLOG.File=${apollo.log.dir}/@WAR_NAME@/IBM_i2_useractivity.log
#log4j.appender.USERACTIVITYLOG.layout=org.apache.log4j.PatternLayout
#log4j.appender.USERACTIVITYLOG.layout.ConversionPattern=%d %-4r [%t] %-5p %c %x - %m%n
#log4j.appender.USERACTIVITYLOG.MaxFileSize=1MB
#log4j.appender.USERACTIVITYLOG.MaxBackupIndex=9
#log4j.appender.USERACTIVITYLOG.Append=false

# If you want to control logging from a specific class, use something like this:
# log4j.category.com.i2group.apollo.commandservice.internal.CommandRouter=DEBUG, APOLLOLOG

